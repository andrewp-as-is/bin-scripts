#!/usr/bin/env bash
{ set +x; } 2>/dev/null

# MAJOR.MINOR.PATCH, http://semver.org/

# 1) init version
# 2) generate requirements.txt
# 3) generate setup.cfg
# 4) bump version if package changed
# 5) generate package.json, setup.cfg again

! [ -e setup.py ] && echo "SKIP ($PWD): setup.py NOT EXISTS" && exit

#name="$(grep ^"name = " setup.cfg | awk -F" = " '{print $2}')"
#v="$(grep ^"version = " setup.cfg | awk -F" = " '{print $2}')"
name="$(python3 setup.py --name)" || exit
version="$(date '+%Y.%-m.%-d')" || exit # date without zeroes
url="https://pypi.org/pypi/"$name"/json"

v="$(python3 setup.py --version)" || exit
json="$(set -x; curl -fLs "$url")" || {
    ( set -x; repo-python-setup-init ); exit
}
pv="$(echo "$json" | jq -r '.info.version')" || exit

[[ -z "$v" ]] && echo "ERROR: version unknown" && exit 1
[[ -z "$pv" ]] && echo "SKIP: https://pypi.org/project/$name/ NOT REGISTERED" && exit

# [[ $v == $pv ]] && echo "SKIP: $v uptodate" && exit
# echo $v$'\n'$pv | sort -V | tail -1 | grep -q "$v" && echo "SKIP: $v > $pv" && exit


( set -x; repo-python-init ) || exit

sdist="$(set -x; repo-python-setup-sdist)" || exit
diff="$(
    cd "$(mktemp -d)" || exit
    pypi_sdist="$(pypi-download "$name" | grep tar.gz)" || exit
    tar-diff "$sdist" "$pypi_sdist"
)" || exit
[[ -z "$diff" ]] && echo "SKIP: uptodate" && exit
echo "$diff"

( set -x; repo-python-setup-init "$version" ) || exit
( set -x; cat setup.py )
( set -x; cat setup-twine.py )
# todo: node
